{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "pdv-ms-user-registry",
    "description" : "User Registry API documentation",
    "version" : "1.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost",
    "description" : "Generated server url"
  } ],
  "paths" : {
    "/users/search" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Search user",
        "description" : "Search a user given its fiscal code. The fiscal code will always be converted in uppercase.",
        "operationId" : "search",
        "parameters" : [ {
          "name" : "x-pagopa-namespace",
          "in" : "header",
          "description" : "Caller visibility context",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fl",
          "in" : "query",
          "description" : "Field list. Subset of fields to be retrieved for the requested resource",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fiscalCode", "name", "familyName", "email", "birthDate", "workContacts" ]
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserSearchDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      }
    },
    "/users" : {
      "patch" : {
        "tags" : [ "user" ],
        "summary" : "Upsert user",
        "description" : "Update the given subset fields of an existing user by its fiscal code, if not present create a new one. The fiscal code will always be converted in uppercase.",
        "operationId" : "save",
        "parameters" : [ {
          "name" : "x-pagopa-namespace",
          "in" : "header",
          "description" : "Caller visibility context",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SaveUserDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserId"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Find user",
        "description" : "Retrieve the user by its internal id",
        "operationId" : "findById",
        "parameters" : [ {
          "name" : "x-pagopa-namespace",
          "in" : "header",
          "description" : "Caller visibility context",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "User internal id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        }, {
          "name" : "fl",
          "in" : "query",
          "description" : "Field list. Subset of fields to be retrieved for the requested resource",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "fiscalCode", "name", "familyName", "email", "birthDate", "workContacts" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResource"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "Delete the user by its internal id",
        "operationId" : "deleteById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User internal id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          }
        }
      },
      "patch" : {
        "tags" : [ "user" ],
        "summary" : "Update user",
        "description" : "Update the given subset fields of an existing user by its internal id, if not present an error is returned",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "x-pagopa-namespace",
          "in" : "header",
          "description" : "Caller visibility context",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "User internal id",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "uuid"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MutableUserFieldsDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "409" : {
            "description" : "Conflict",
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "UserSearchDto" : {
        "required" : [ "fiscalCode" ],
        "type" : "object",
        "properties" : {
          "fiscalCode" : {
            "type" : "string",
            "description" : "${swagger.model.user.fiscalCode}"
          }
        }
      },
      "InvalidParam" : {
        "required" : [ "name", "reason" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Invalid parameter name."
          },
          "reason" : {
            "type" : "string",
            "description" : "Invalid parameter reason."
          }
        },
        "description" : "A list of invalid parameters details."
      },
      "Problem" : {
        "required" : [ "status", "title" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "A URL to a page with more details regarding the problem."
          },
          "title" : {
            "type" : "string",
            "description" : "Short human-readable summary of the problem."
          },
          "status" : {
            "maximum" : 599,
            "minimum" : 100,
            "type" : "integer",
            "description" : "The HTTP status code.",
            "format" : "int32",
            "example" : 500
          },
          "detail" : {
            "type" : "string",
            "description" : "Human-readable description of this specific problem."
          },
          "instance" : {
            "type" : "string",
            "description" : "A URI that describes where the problem occurred."
          },
          "invalidParams" : {
            "type" : "array",
            "description" : "A list of invalid parameters details.",
            "items" : {
              "$ref" : "#/components/schemas/InvalidParam"
            }
          }
        },
        "description" : "A \"problem detail\" as a way to carry machine-readable details of errors (https://datatracker.ietf.org/doc/html/rfc7807)"
      },
      "CertifiableFieldResourceLocalDate" : {
        "required" : [ "certification", "value" ],
        "type" : "object",
        "properties" : {
          "certification" : {
            "type" : "string",
            "description" : "${swagger.model.certifiableField.certification}",
            "enum" : [ "NONE", "SPID" ]
          },
          "value" : {
            "type" : "string",
            "description" : "${swagger.model.certifiableField.value}",
            "format" : "date"
          }
        },
        "description" : "${swagger.model.user.birthDate}"
      },
      "CertifiableFieldResourceString" : {
        "required" : [ "certification", "value" ],
        "type" : "object",
        "properties" : {
          "certification" : {
            "type" : "string",
            "description" : "${swagger.model.certifiableField.certification}",
            "enum" : [ "NONE", "SPID" ]
          },
          "value" : {
            "type" : "string",
            "description" : "${swagger.model.certifiableField.value}"
          }
        },
        "description" : "${swagger.model.user.workContact.email}"
      },
      "UserResource" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "${swagger.model.user.id}",
            "format" : "uuid"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "${swagger.model.user.fiscalCode}"
          },
          "name" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "familyName" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "email" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "birthDate" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceLocalDate"
          },
          "workContacts" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkContactResource"
            },
            "description" : "${swagger.model.user.workContacts}"
          }
        }
      },
      "WorkContactResource" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          }
        },
        "description" : "${swagger.model.user.workContacts}"
      },
      "SaveUserDto" : {
        "required" : [ "fiscalCode" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "familyName" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "email" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "birthDate" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceLocalDate"
          },
          "workContacts" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkContactResource"
            },
            "description" : "${swagger.model.user.workContacts}"
          },
          "fiscalCode" : {
            "type" : "string",
            "description" : "${swagger.model.user.fiscalCode}"
          }
        }
      },
      "UserId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "${swagger.model.user.id}",
            "format" : "uuid"
          }
        }
      },
      "MutableUserFieldsDto" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "familyName" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "email" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceString"
          },
          "birthDate" : {
            "$ref" : "#/components/schemas/CertifiableFieldResourceLocalDate"
          },
          "workContacts" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WorkContactResource"
            },
            "description" : "${swagger.model.user.workContacts}"
          }
        }
      }
    }
  }
}